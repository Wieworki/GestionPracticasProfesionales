version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile      ## File used for the app
    image: proyecto-final            ## The resulting image name
    container_name: proyecto-final
    ports:
      - "8000:80"                 ## Port from where the app can be accessed
    volumes:
      - .:/var/www/html           ## Mounts the current project directory into the container for live updates
    depends_on:                   ## Ensures that the database and mailhog are started before the container
      - db
      - mailhog
      - redis
    networks:                     ## Connects the app to the network 'laravel' so it can reach db an mailhog
      - laravel

  db:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped       ## Automatically restarts the DB if it crashes or Docker restart
    environment:                  ## Sets the DB credentials via environment variables
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: laravel
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:                     ## Connects the app to the network 'laravel' so it can be reached
      - laravel

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"
    networks:                     ## Connects the app to the network 'laravel' so it can be reached
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - laravel

  vite:
    image: node:20-alpine
    container_name: vite
    working_dir: /app
    volumes:
      - .:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - laravel

volumes:                          ## Defines a named volume 'pgdata' to persist data between runs
  pgdata:

networks:
  laravel:
    driver: bridge                ## Isolated bridge network to enable comunication between containers